{
    "font_size": 0.4,
    "font_color": "#FFFFFF",
    "background_alpha": 0.5,
    "background_color": "#9C27B0",
    "Stroke": "none",
    "body": [
        {
            "from": 5.04,
            "to": 10.16,
            "location": 2,
            "content": "还有一个很有用的 hooks"
        },
        {
            "from": 10.16,
            "to": 14.16,
            "location": 2,
            "content": "就是 use_effect"
        },
        {
            "from": 14.16,
            "to": 20.24,
            "location": 2,
            "content": "在写些代码之前或者真的跑示例之前, 我们先来看看文档"
        },
        {
            "from": 22.24,
            "to": 31.92,
            "location": 2,
            "content": "和其他 hooks 一样,\n它在 Concepts > Function Components \n> Custom Hooks > Pre-defined Hooks"
        },
        {
            "from": 31.92,
            "to": 36.24,
            "location": 2,
            "content": "在, 下面这里, use_effect"
        },
        {
            "from": 36.24,
            "to": 41.52,
            "location": 2,
            "content": "use_effect 和 React 里的差不多,\n如果你之前是 React 用户的话"
        },
        {
            "from": 44.16,
            "to": 47.6,
            "location": 2,
            "content": "如果你没用过 React, 或者是其他框架的用户"
        },
        {
            "from": 47.6,
            "to": 53.04,
            "location": 2,
            "content": "简而言之, 这东西是生命周期钩子"
        },
        {
            "from": 53.04,
            "to": 58.16,
            "location": 2,
            "content": "如果你想知道组件以某种方式更新了"
        },
        {
            "from": 58.16,
            "to": 62.88,
            "location": 2,
            "content": "怎么在重新渲染的时候运行你的代码? 这样就行."
        },
        {
            "from": 62.88,
            "to": 66.64,
            "location": 2,
            "content": "use_effect 基本上就是..."
        },
        {
            "from": 66.64,
            "to": 70.72,
            "location": 2,
            "content": "就是, 在更新发生后产生影响 (effect) 的方法"
        },
        {
            "from": 70.72,
            "to": 75.68,
            "location": 2,
            "content": "所以你可以拿到 handle 然后使用它"
        },
        {
            "from": 75.68,
            "to": 81.76,
            "location": 2,
            "content": "Okay, 它的意义是什么?"
        },
        {
            "from": 81.76,
            "to": 84.84,
            "location": 2,
            "content": "是...看看这个例子"
        },
        {
            "from": 84.84,
            "to": 91.92,
            "location": 2,
            "content": "uh, 基本上有一个 use_state, 和一个 use_effect"
        },
        {
            "from": 91.92,
            "to": 96.8,
            "location": 2,
            "content": "它们可以, 比如每当 State 更新,"
        },
        {
            "from": 96.8,
            "to": 103.52,
            "location": 2,
            "content": "这会导致重新渲染, 然后导致这个闭包运行"
        },
        {
            "from": 103.52,
            "to": 107.68,
            "location": 2,
            "content": "这里的代码就会跑起来"
        },
        {
            "from": 107.68,
            "to": 113.2,
            "location": 2,
            "content": "它们会把这里的标题设置成和计数结果一样"
        },
        {
            "from": 113.2,
            "to": 117.68,
            "location": 2,
            "content": "不错. 在闭包最后,"
        },
        {
            "from": 117.68,
            "to": 120.24,
            "location": 2,
            "content": "这里有一个很容易被忽视的东西."
        },
        {
            "from": 120.24,
            "to": 128.08,
            "location": 2,
            "content": "uh, 这是一个函数, 或者说是一个闭包\n它会在最后被 use_effect 返回"
        },
        {
            "from": 128.08,
            "to": 135.04,
            "location": 2,
            "content": "它会在组件被摧毁时调用"
        },
        {
            "from": 135.04,
            "to": 145.68,
            "location": 2,
            "content": "所以当组件被清理时, 这个会第一时间被调用"
        },
        {
            "from": 145.68,
            "to": 155.44,
            "location": 2,
            "content": "大多数时候, 我发现我都不会考虑去清理组件\n不过它应该有什么作用吧"
        },
        {
            "from": 155.44,
            "to": 159.52,
            "location": 2,
            "content": "uh so, 让我们回到代码"
        },
        {
            "from": 159.52,
            "to": 166,
            "location": 2,
            "content": "看看它们实际上是怎么被使用的吧,\n看到 lib.rs"
        },
        {
            "from": 166,
            "to": 170.56,
            "location": 2,
            "content": "在这里我们有一些 State, 事实上..."
        },
        {
            "from": 170.56,
            "to": 175.6,
            "location": 2,
            "content": "事实上它们是一些函数式组件 (的 Props)"
        },
        {
            "from": 175.6,
            "to": 179.6,
            "location": 2,
            "content": "uh,"
        },
        {
            "from": 179.6,
            "to": 185.84,
            "location": 2,
            "content": "这里有 use_state, 我们来创建一个 use_effect 吧"
        },
        {
            "from": 185.84,
            "to": 190.48,
            "location": 2,
            "content": "coding..."
        },
        {
            "from": 190.48,
            "to": 197.04,
            "location": 2,
            "content": "我们不需要在这里放任何东西,\n因为这里的闭包会被立刻调用"
        },
        {
            "from": 197.04,
            "to": 203.52,
            "location": 2,
            "content": "uh // 这个闭包会在一下时间调用:"
        },
        {
            "from": 204.56,
            "to": 208.08,
            "location": 2,
            "content": "// - 第一次渲染时 (参考 vue 的 on_mount"
        },
        {
            "from": 209.92,
            "to": 212.96,
            "location": 2,
            "content": "// - 所有重新渲染 (参考 vue 的 update"
        },
        {
            "from": 212.96,
            "to": 220.08,
            "location": 2,
            "content": "如果你希望你的代码在每次更新的时候被调用,\n把他们写在这里"
        },
        {
            "from": 220.08,
            "to": 224.08,
            "location": 2,
            "content": "这里要注意第一次渲染"
        },
        {
            "from": 224.08,
            "to": 227.36,
            "location": 2,
            "content": "因为有时候我们希望我们的代码,"
        },
        {
            "from": 227.36,
            "to": 232,
            "location": 2,
            "content": "我不希望我们的代码在第一次渲染的时候就运行"
        },
        {
            "from": 232,
            "to": 239.04,
            "location": 2,
            "content": "uh, 只希望在组件真正更新是, 也就是这里, 这里触发时运行"
        },
        {
            "from": 239.04,
            "to": 245.76,
            "location": 2,
            "content": "so um, 我们实际上把它作为 future 传给 use_effect"
        },
        {
            "from": 245.76,
            "to": 250.24,
            "location": 2,
            "content": "来让它在未来被调用, 来做点比如输出东西之类的事"
        },
        {
            "from": 250.24,
            "to": 255.84,
            "location": 2,
            "content": "这就是 use_effect 产生作用的方式"
        },
        {
            "from": 256,
            "to": 261.44,
            "location": 2,
            "content": "okay, 想象一下"
        },
        {
            "from": 261.44,
            "to": 265.92,
            "location": 2,
            "content": "如果你有一个有一堆东西的\nuse_state, 比如一堆待办项"
        },
        {
            "from": 265.92,
            "to": 268.4,
            "location": 2,
            "content": "但是,"
        },
        {
            "from": 268.4,
            "to": 273.28,
            "location": 2,
            "content": "我们并不能在一开始拿到它"
        },
        {
            "from": 273.28,
            "to": 277.04,
            "location": 2,
            "content": "可能需要等一些时间, 我们才可以拿到"
        },
        {
            "from": 277.04,
            "to": 280.08,
            "location": 2,
            "content": "简单来说, 这是一个开始为 None 的 Option"
        },
        {
            "from": 280.08,
            "to": 284.48,
            "location": 2,
            "content": "过一段时间它会变成 Some, 这会引起问题"
        },
        {
            "from": 284.48,
            "to": 290.56,
            "location": 2,
            "content": "so, 所以我们必须知道它是否存在"
        },
        {
            "from": 290.56,
            "to": 294.08,
            "location": 2,
            "content": "检查, 如果..."
        },
        {
            "from": 294.08,
            "to": 299.12,
            "location": 2,
            "content": "在这个假设里,"
        },
        {
            "from": 299.12,
            "to": 306.72,
            "location": 2,
            "content": "好像是一个校验位"
        },
        {
            "from": 306.72,
            "to": 311.84,
            "location": 2,
            "content": "// 如果校验位存在"
        },
        {
            "from": 315.04,
            "to": 323.16,
            "location": 2,
            "content": "| //然后得到所有的用户待办项"
        },
        {
            "from": 328.72,
            "to": 335.6,
            "location": 2,
            "content": "um, 当然, 如果这个校验位不存在,\n我们就啥也不做"
        },
        {
            "from": 335.6,
            "to": 341.44,
            "location": 2,
            "content": "这就是个朴实无华的 if"
        },
        {
            "from": 341.44,
            "to": 345.6,
            "location": 2,
            "content": "okay, 这看起来相当简单. 在结尾这里"
        },
        {
            "from": 345.6,
            "to": 349.04,
            "location": 2,
            "content": "因为这是 yew.rs 的要求,"
        },
        {
            "from": 349.28,
            "to": 354.24,
            "location": 2,
            "content": "我们必须返回一个闭包"
        },
        {
            "from": 354.24,
            "to": 356.48,
            "location": 2,
            "content": "解决一下"
        },
        {
            "from": 358.24,
            "to": 361.92,
            "location": 2,
            "content": "这是一个最基本的闭包, 它什么都不干"
        },
        {
            "from": 361.92,
            "to": 367.28,
            "location": 2,
            "content": "也就是空闭包, 这样就没问题了"
        },
        {
            "from": 367.28,
            "to": 371.04,
            "location": 2,
            "content": "now, 比我们预想再进一步"
        },
        {
            "from": 371.04,
            "to": 379.2,
            "location": 2,
            "content": "如果这个校验位存在, 我们进行一个 API 请求"
        },
        {
            "from": 379.2,
            "to": 384.16,
            "location": 2,
            "content": "来拿到所有的待办项, 完美,"
        },
        {
            "from": 384.16,
            "to": 388.56,
            "location": 2,
            "content": "除了我们会为这些待办项更新 use_state\n而这会导致重新渲染"
        },
        {
            "from": 388.56,
            "to": 393.36,
            "location": 2,
            "content": "这又会再次触发 use_effect\n检测校验位, 发现还是存在"
        },
        {
            "from": 393.36,
            "to": 399.28,
            "location": 2,
            "content": "于是再次进行请求, 再次导致重新渲染"
        },
        {
            "from": 399.28,
            "to": 404.08,
            "location": 2,
            "content": "这样, 你得到的待办项内容是一样的"
        },
        {
            "from": 404.08,
            "to": 408.4,
            "location": 2,
            "content": "但重复请求得到的确是全新的对象"
        },
        {
            "from": 408.4,
            "to": 411.04,
            "location": 2,
            "content": "now, 我们陷入了无限循环"
        },
        {
            "from": 411.04,
            "to": 415.12,
            "location": 2,
            "content": "程序会不断的请求服务器而不会继续运行"
        },
        {
            "from": 415.12,
            "to": 419.92,
            "location": 2,
            "content": "直到浏览器崩溃, 看起来不太还对吧?"
        },
        {
            "from": 419.92,
            "to": 424.56,
            "location": 2,
            "content": "所以除了查看校验位以外"
        },
        {
            "from": 424.56,
            "to": 429.76,
            "location": 2,
            "content": "还要确保它是我们的第一次渲染"
        },
        {
            "from": 429.76,
            "to": 432.64,
            "location": 2,
            "content": "so, 我们要怎样确保?"
        },
        {
            "from": 432.64,
            "to": 436.8,
            "location": 2,
            "content": "我的建议是, 在这里用一个 use_state"
        },
        {
            "from": 436.8,
            "to": 441.6,
            "location": 2,
            "content": "来检查这是不是我们的第一次渲染,"
        },
        {
            "from": 441.6,
            "to": 444.4,
            "location": 2,
            "content": "所以我们要再创建一个 use_state,\n它只保存一个布尔"
        },
        {
            "from": 444.4,
            "to": 462.64,
            "location": 2,
            "content": "那么, 开始 coding..."
        },
        {
            "from": 463.6,
            "to": 467.12,
            "location": 2,
            "content": "okay, 创建完了,"
        },
        {
            "from": 467.12,
            "to": 469.92,
            "location": 2,
            "content": "我们需要 move"
        },
        {
            "from": 470.96,
            "to": 477.2,
            "location": 2,
            "content": "转移 first_load 的所有权. 现在就差不多了"
        },
        {
            "from": 477.2,
            "to": 482.32,
            "location": 2,
            "content": "如果校验位存在, 而且这是我们的第一次渲染, 那基本上..."
        },
        {
            "from": 482.32,
            "to": 488.4,
            "location": 2,
            "content": "coding..."
        },
        {
            "from": 491.12,
            "to": 506.12,
            "location": 2,
            "content": "// 这里只在组件加载后的第一次渲染里运行"
        },
        {
            "from": 506.48,
            "to": 518.56,
            "location": 2,
            "content": "// 刷新和重渲染的时候, 这里不会运行"
        },
        {
            "from": 519.12,
            "to": 525.04,
            "location": 2,
            "content": "uh, 但是, 现在它还不会"
        },
        {
            "from": 525.04,
            "to": 528.96,
            "location": 2,
            "content": "因为在第一次结束后要把这里设置为 false"
        },
        {
            "from": 528.96,
            "to": 532.48,
            "location": 2,
            "content": "这后面就是如果它是第一次载入"
        },
        {
            "from": 532.48,
            "to": 542,
            "location": 2,
            "content": "so, // 载入我们需要载入的"
        },
        {
            "from": 542,
            "to": 545.36,
            "location": 2,
            "content": "uh, 不要忘了"
        },
        {
            "from": 545.36,
            "to": 551.68,
            "location": 2,
            "content": "first_load.set(false)"
        },
        {
            "from": 554.96,
            "to": 559.68,
            "location": 2,
            "content": "如果我们想, 我们可以在组件析构的时候"
        },
        {
            "from": 559.68,
            "to": 564.64,
            "location": 2,
            "content": "把 first_load 设置为 true"
        },
        {
            "from": 564.64,
            "to": 568.8,
            "location": 2,
            "content": "但是这个组件是根组件, 如果它被析构了"
        },
        {
            "from": 568.8,
            "to": 574.16,
            "location": 2,
            "content": "那整个应用就完蛋了"
        },
        {
            "from": 574.16,
            "to": 577.68,
            "location": 2,
            "content": "也就是说, 无论如何都会重新加载"
        },
        {
            "from": 577.68,
            "to": 581.84,
            "location": 2,
            "content": "所以这对我们来说没什么必要"
        },
        {
            "from": 581.84,
            "to": 586.24,
            "location": 2,
            "content": "但是, 如果这是你在其他什么地方的组件"
        },
        {
            "from": 586.24,
            "to": 590.88,
            "location": 2,
            "content": "你希望你的 state 负责计数或者计时"
        },
        {
            "from": 590.88,
            "to": 595.12,
            "location": 2,
            "content": "要是你希望析构这个计时器, 阻止它继续运行"
        },
        {
            "from": 595.12,
            "to": 599.48,
            "location": 2,
            "content": "你得这样移除它, 但是对于 api 请求"
        },
        {
            "from": 599.48,
            "to": 604.56,
            "location": 2,
            "content": "对整个 app 数据进行初始化"
        },
        {
            "from": 604.56,
            "to": 608.64,
            "location": 2,
            "content": "比如一个重存储, 或者 context"
        },
        {
            "from": 608.64,
            "to": 613.2,
            "location": 2,
            "content": "这是一个极好的案例"
        },
        {
            "from": 613.2,
            "to": 618.4,
            "location": 2,
            "content": "我希望你可以理解如何用 effect 起作用 (effect)"
        },
        {
            "from": 618.4,
            "to": 624.48,
            "location": 2,
            "content": "um, 以及别把自己搞进那个无限循环里"
        },
        {
            "from": 624.48,
            "to": 628.56,
            "location": 2,
            "content": "总之, 蟹蟹观看"
        },
        {
            "from": 628.56,
            "to": 631.56,
            "location": 2,
            "content": "下个视频我们再见, yew.rs 道, 堂堂连载!"
        }
    ]
}
