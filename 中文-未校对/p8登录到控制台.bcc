{
    "font_size": 0.4,
    "font_color": "#FFFFFF",
    "background_alpha": 0.5,
    "background_color": "#9C27B0",
    "Stroke": "none",
    "body": [
        {
            "from": 3.6,
            "to": 8.48,
            "location": 2,
            "content": "现在我们有了一个 yew 做的 Hello World!!!"
        },
        {
            "from": 8.48,
            "to": 12.4,
            "location": 2,
            "content": "我们可以试试打个岔, 来看看东西是怎么加载进控制台的"
        },
        {
            "from": 12.4,
            "to": 17.6,
            "location": 2,
            "content": "因为当我们写 JS 的时候, 尤其在写前端 Rust 的时候"
        },
        {
            "from": 17.6,
            "to": 22.08,
            "location": 2,
            "content": "我们只有很有限的办法来调试代码"
        },
        {
            "from": 22.08,
            "to": 26.64,
            "location": 2,
            "content": "所以我们要了解可以用的工具,"
        },
        {
            "from": 26.64,
            "to": 31.04,
            "location": 2,
            "content": "uh, 如果我尝试在代码里输出记录,"
        },
        {
            "from": 31.04,
            "to": 35.44,
            "location": 2,
            "content": "比如尝试进行 println! 或者 debug"
        },
        {
            "from": 35.44,
            "to": 40.4,
            "location": 2,
            "content": "不幸的是, 我们在这里什么打印都看不到"
        },
        {
            "from": 40.4,
            "to": 45.92,
            "location": 2,
            "content": "如果我们看看服务器, 这里有我们的运行时"
        },
        {
            "from": 45.92,
            "to": 49.68,
            "location": 2,
            "content": "我什么都看不到"
        },
        {
            "from": 49.68,
            "to": 53.68,
            "location": 2,
            "content": "因为我们的应用跑在浏览器里"
        },
        {
            "from": 53.68,
            "to": 56.56,
            "location": 2,
            "content": "而我们的调试可不是浏览器里可以跑的东西"
        },
        {
            "from": 56.56,
            "to": 62,
            "location": 2,
            "content": "它会在运行前被剥离, 然后什么事情都不会发生"
        },
        {
            "from": 62,
            "to": 66,
            "location": 2,
            "content": "好消息是, 我们还有 console.log()"
        },
        {
            "from": 66,
            "to": 70.16,
            "location": 2,
            "content": "撒, 让我们来进行一个简单的编写吧"
        },
        {
            "from": 70.16,
            "to": 75.2,
            "location": 2,
            "content": "我们会用到一个叫 Gloo 的工具 Crates 来让事情变得简单一些"
        },
        {
            "from": 75.2,
            "to": 81.2,
            "location": 2,
            "content": "在我们的 cargo.toml 我们加上 gloo"
        },
        {
            "from": 84.32,
            "to": 87.6,
            "location": 2,
            "content": "我们要用最新的版本"
        },
        {
            "from": 87.6,
            "to": 91.76,
            "location": 2,
            "content": "现在轮到 rust-analyzer 了"
        },
        {
            "from": 91.76,
            "to": 94.8,
            "location": 2,
            "content": "等待万能的 rust-analyzer 解决一切"
        },
        {
            "from": 94.8,
            "to": 98.84,
            "location": 2,
            "content": "等到群 crates 归位之时"
        },
        {
            "from": 98.84,
            "to": 105.04,
            "location": 2,
            "content": "我们就创建一个新的变量,"
        },
        {
            "from": 105.04,
            "to": 108.64,
            "location": 2,
            "content": "初次见面, 便称之为 name"
        },
        {
            "from": 108.64,
            "to": 112.8,
            "location": 2,
            "content": "name 赋值 Brooks, 现在我要输出这玩意"
        },
        {
            "from": 112.8,
            "to": 117.92,
            "location": 2,
            "content": "我们已经设置完成了这个变量"
        },
        {
            "from": 117.92,
            "to": 122.72,
            "location": 2,
            "content": "这里你可以看到来自 gloo 船新的 log! 宏"
        },
        {
            "from": 122.72,
            "to": 128.4,
            "location": 2,
            "content": "当我们引入它, gloo 就会允许我们在控制台输出记录"
        },
        {
            "from": 128.4,
            "to": 132.4,
            "location": 2,
            "content": "gloo 还可以干许许多多的事情, 他真的, 我哭死"
        },
        {
            "from": 133.76,
            "to": 140.56,
            "location": 2,
            "content": "我们现在就可以用它输出了! 输入 name"
        },
        {
            "from": 141.44,
            "to": 147.76,
            "location": 2,
            "content": "回到控制台, 我们就可以看到 Brooks"
        },
        {
            "from": 150.16,
            "to": 153.84,
            "location": 2,
            "content": "还有很多其他的 console.log 的方法"
        },
        {
            "from": 153.84,
            "to": 159.6,
            "location": 2,
            "content": "我还可以在这里输出一个复合的东西"
        },
        {
            "from": 159.6,
            "to": 164.64,
            "location": 2,
            "content": "就好像一个函数和未定义数字\n(这里没听懂, 反正就和format!()宏还有print!()宏用法一样嘛"
        },
        {
            "from": 164.64,
            "to": 168.84,
            "location": 2,
            "content": "\"my name is\""
        },
        {
            "from": 172.72,
            "to": 177.28,
            "location": 2,
            "content": "于是它们都输出出来了, 很棒棒"
        },
        {
            "from": 177.28,
            "to": 181.36,
            "location": 2,
            "content": "这支持我们想输出的所有类型的数据,"
        },
        {
            "from": 181.36,
            "to": 186.24,
            "location": 2,
            "content": "数字, String, &str, 但是不支持对象"
        },
        {
            "from": 186.24,
            "to": 189.44,
            "location": 2,
            "content": "那是因为它要保证输出的是字符串"
        },
        {
            "from": 189.44,
            "to": 193.6,
            "location": 2,
            "content": "起码得是原始类型的数值"
        },
        {
            "from": 193.6,
            "to": 197.12,
            "location": 2,
            "content": "那如果我们输出一个对象会怎么样?"
        },
        {
            "from": 197.12,
            "to": 203.6,
            "location": 2,
            "content": "我们进行一个快速的创建"
        },
        {
            "from": 203.6,
            "to": 209.12,
            "location": 2,
            "content": "我们创建一个结构体(Rust 的结构体承担方法和数据聚合的功能)\n我们叫它 MyObject"
        },
        {
            "from": 210.56,
            "to": 216.08,
            "location": 2,
            "content": "一个 `username` 字符串属性"
        },
        {
            "from": 216.08,
            "to": 219.68,
            "location": 2,
            "content": "还有一个偏爱语言,"
        },
        {
            "from": 221.76,
            "to": 225.56,
            "location": 2,
            "content": "也是字符串"
        },
        {
            "from": 226.72,
            "to": 232.08,
            "location": 2,
            "content": "我要创建到这里"
        },
        {
            "from": 232.08,
            "to": 235.2,
            "location": 2,
            "content": "`my_object`"
        },
        {
            "from": 235.2,
            "to": 238,
            "location": 2,
            "content": "赋值为"
        },
        {
            "from": 238.16,
            "to": 245.68,
            "location": 2,
            "content": "`MyObject`, username是"
        },
        {
            "from": 245.68,
            "to": 249.68,
            "location": 2,
            "content": "Oh, 这里不需要类型名,"
        },
        {
            "from": 249.68,
            "to": 253.76,
            "location": 2,
            "content": "但是我们要`to_owned()`, 来把字符串切片类型转换为字符串"
        },
        {
            "from": 253.76,
            "to": 256.8,
            "location": 2,
            "content": "对于`favorite_language`"
        },
        {
            "from": 257.36,
            "to": 261.76,
            "location": 2,
            "content": "鼠鼠我啊, 最喜欢 Rust 了"
        },
        {
            "from": 261.76,
            "to": 264.4,
            "location": 2,
            "content": "转成字符串"
        },
        {
            "from": 264.48,
            "to": 270.56,
            "location": 2,
            "content": "现在如果我打算"
        },
        {
            "from": 270.56,
            "to": 275.92,
            "location": 2,
            "content": "把我们的 `my_object`, 进行另一个log!"
        },
        {
            "from": 275.92,
            "to": 280.16,
            "location": 2,
            "content": "这里会报错说:\"嘿, 小伙子, 我们准备把这玩意变成一个 JS 数据类型\""
        },
        {
            "from": 282.96,
            "to": 288,
            "location": 2,
            "content": "\"但是我们不知道这么办到\""
        },
        {
            "from": 288,
            "to": 294.8,
            "location": 2,
            "content": "\"我们想要的是某种可以转化为字符串的东西\""
        },
        {
            "from": 294.8,
            "to": 300.08,
            "location": 2,
            "content": "而我们正好有办法来解决这个"
        },
        {
            "from": 300.08,
            "to": 304.16,
            "location": 2,
            "content": "serde 是一个序列化和反序列化的 crates"
        },
        {
            "from": 304.16,
            "to": 307.76,
            "location": 2,
            "content": "它把结构体, 枚举, 队列之类的结构"
        },
        {
            "from": 307.76,
            "to": 312.48,
            "location": 2,
            "content": "转换为 .json 之类的序列化的文本"
        },
        {
            "from": 312.48,
            "to": 317.28,
            "location": 2,
            "content": "我们要引入两个 crate, 分别是 serde"
        },
        {
            "from": 317.28,
            "to": 321.28,
            "location": 2,
            "content": "和 serde_json \n(显然作者是顺便在教序列化相关的包, 否则其实format!宏就可以完成任务 \n(serde解析数据结构, serde_json互相转换解析完的结构和json"
        },
        {
            "from": 322.72,
            "to": 327.76,
            "location": 2,
            "content": "我们分别引入两个包的最新版本"
        },
        {
            "from": 330.8,
            "to": 336.68,
            "location": 2,
            "content": "等待 rust_analyzer 的安装"
        },
        {
            "from": 339.28,
            "to": 343.92,
            "location": 2,
            "content": "完美, 现在我们要定义这个 struct 可以被序列化"
        },
        {
            "from": 343.92,
            "to": 346.88,
            "location": 2,
            "content": "我们要在这里定义`#[derive()]`"
        },
        {
            "from": 346.88,
            "to": 352,
            "location": 2,
            "content": "为 Serialize (序列化)"
        },
        {
            "from": 352,
            "to": 356,
            "location": 2,
            "content": "我基本上同时也都会为可序列化的实现 Deserialize (反序列化)"
        },
        {
            "from": 356,
            "to": 360.96,
            "location": 2,
            "content": "反序列化就是把规约化的字符串重新转换成为数据结构 这在这里不是必须的"
        },
        {
            "from": 360.96,
            "to": 364.72,
            "location": 2,
            "content": "但是我就想这么做\n(其实译者建议用什么引入什么, 不然打包体积...血的教训啊"
        },
        {
            "from": 364.72,
            "to": 368.32,
            "location": 2,
            "content": "我们还是得到了一个错误,"
        },
        {
            "from": 368.32,
            "to": 373.12,
            "location": 2,
            "content": "因为我们并没有调用序列化后的"
        },
        {
            "from": 373.12,
            "to": 378.16,
            "location": 2,
            "content": "这里调用的应该是 json"
        },
        {
            "from": 378.16,
            "to": 382.08,
            "location": 2,
            "content": "我们现在这里声明`serde_json`"
        },
        {
            "from": 382.08,
            "to": 386.64,
            "location": 2,
            "content": "选择`to_string()`, 我们有好几个选项"
        },
        {
            "from": 386.64,
            "to": 389.28,
            "location": 2,
            "content": "选择`to_string_pretty()`"
        },
        {
            "from": 389.28,
            "to": 394.92,
            "location": 2,
            "content": "我们要引用 my_object"
        },
        {
            "from": 403.68,
            "to": 408.72,
            "location": 2,
            "content": "让我们看看, 他转换自... Oh! 返回类型是 Result"
        },
        {
            "from": 408.72,
            "to": 413.28,
            "location": 2,
            "content": "`to_string_pretty()`和`to_string()`的返回值都是 Result"
        },
        {
            "from": 413.28,
            "to": 418.56,
            "location": 2,
            "content": "这意味着我们不能直接得到结果, 我们必须处理这个包含可能错误的枚举"
        },
        {
            "from": 418.56,
            "to": 425.04,
            "location": 2,
            "content": "不幸的是这里直接返回的一个 Html, 我并不能用`?`运算符上抛错误"
        },
        {
            "from": 425.04,
            "to": 431.04,
            "location": 2,
            "content": "现在我只能想办法直接处理这个错误,"
        },
        {
            "from": 431.04,
            "to": 436.72,
            "location": 2,
            "content": "你可以把它转成字符串"
        },
        {
            "from": 436.72,
            "to": 440.4,
            "location": 2,
            "content": "并处理错误"
        },
        {
            "from": 440.4,
            "to": 445.44,
            "location": 2,
            "content": "或者我们直接简单的用 `unwarp()` 处理"
        },
        {
            "from": 445.44,
            "to": 450.48,
            "location": 2,
            "content": "很不幸, 我们在前端领域会经常使用 `unwarp()` \n(虽然前端我们不常打包日志系统, 但是`unwarp()`真的可以通过很多方法避免啊!"
        },
        {
            "from": 450.48,
            "to": 454.8,
            "location": 2,
            "content": "也许在未来这会被改变"
        },
        {
            "from": 454.8,
            "to": 458.24,
            "location": 2,
            "content": "在那之前我们必须要接受这个"
        },
        {
            "from": 458.24,
            "to": 462.64,
            "location": 2,
            "content": "错误都解决了, 我们来看看, 我们看到输出已经打印在这里了"
        },
        {
            "from": 462.64,
            "to": 467.36,
            "location": 2,
            "content": "这很棒, 而且是被格式化过的"
        },
        {
            "from": 467.36,
            "to": 470.4,
            "location": 2,
            "content": "这会让它更加易于理解"
        },
        {
            "from": 470.4,
            "to": 474.4,
            "location": 2,
            "content": "总之, 希望这会对你在使用 yew.rs 和任何其他前端框架时"
        },
        {
            "from": 474.4,
            "to": 480,
            "location": 2,
            "content": "进行的调试产生帮助,"
        },
        {
            "from": 480,
            "to": 484.08,
            "location": 2,
            "content": "因为 gloo 可以和很多东西一切工作"
        },
        {
            "from": 484.08,
            "to": 488.84,
            "location": 2,
            "content": "蟹蟹观看, 下期再见"
        }
    ]
}
